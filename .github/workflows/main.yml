name: Linting and Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Определяем версию Unity
    - name: Get Unity version
      id: get_unity_version
      run: |
        UNITY_VERSION=$(grep "m_EditorVersion" ProjectSettings/ProjectVersion.txt | awk '{print $2}')
        echo "unity_version=${UNITY_VERSION}" >> $GITHUB_OUTPUT
        echo "Using Unity version: ${UNITY_VERSION}"

    # Используем универсальный подход для образов Unity
    - name: Setup Unity
      run: |
        # Для версий 6000+ используем тег 'latest'
        if [[ "${{ steps.get_unity_version.outputs.unity_version }}" == 6* ]]; then
          docker pull unityci/editor:latest
          docker tag unityci/editor:latest unity-editor
        else
          docker pull unityci/editor:${{ steps.get_unity_version.outputs.unity_version }}
          docker tag unityci/editor:${{ steps.get_unity_version.outputs.unity_version }} unity-editor
        fi

    # Линтинг
    - name: Run Super-Linter for C#
      uses: super-linter/super-linter@v7.4.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_WORKSPACE: ./Files/Scripts
        VALIDATE_CSHARP: true
        OUTPUT_FORMAT: sarif
        OUTPUT_DETAIL: detailed
        OUTPUT_SARIF: ./sarif-report.sarif
        FILTER_REGEX_EXCLUDE: .*\.meta$
      continue-on-error: true

    # Запуск юнит-тестов
    - name: Run Unity tests
      run: |
        docker run \
          -v "$(pwd):/project" \
          -w /project \
          unity-editor \
          unity-editor \
          -batchmode \
          -nographics \
          -quit \
          -logFile /dev/stdout \
          -projectPath /project \
          -runTests \
          -testPlatform EditMode \
          -testResults /project/test-results.xml

    # Публикация результатов
    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          ./test-results.xml
          ./sarif-report.sarif

    - name: Upload SARIF report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ./sarif-report.sarif
      continue-on-error: true

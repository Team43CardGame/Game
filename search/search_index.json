{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Epic Battle of Epic Mages - Online Card Game","text":"<ul> <li>Game for 3-6 players, where you can create spells from 3 colors cards and cast them</li> <li>Actual version of game</li> <li>Link to Demo Video</li> </ul>"},{"location":"#projects-goals","title":"Projects Goals","text":"<ul> <li>Create a multiplayer (At least local game) game for 3-6 players, that will be interesting and enjoyable to play</li> <li>Make the game pleasing to the eye through visual design</li> </ul>"},{"location":"#project-context-diagram","title":"Project Context Diagram","text":""},{"location":"#stakeholders","title":"StakeHolders","text":"<ul> <li>Customer - Timofey Ivlenkov</li> <li>TA - Danila Danko</li> </ul>"},{"location":"#target-audience","title":"Target Audience","text":"<ul> <li>Students of IU or any community that can use Local Network, because our game will work at local network</li> </ul>"},{"location":"#external-systems","title":"External Systems","text":"<ul> <li>We don't use any servers or databases, all information, all data is stored on host and client devices.</li> <li>So, we don't use any external systems</li> </ul>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li>[X] MVP 0<ul> <li>[X] Main scene of the game</li> <li>[X] Mechanic of turns</li> <li>[X] Hot Seat game mode (Timely solution)</li> <li>[X] Simulation of spell casting</li> </ul> </li> <li>[X] MVP 1<ul> <li>[X] Local game mode for 2 players</li> <li>[X] Simple main menu</li> </ul> </li> <li>[X] MVP 2<ul> <li>[X] Local game mode for 3 - 6 players</li> <li>[X] 2 cards spells implementation</li> </ul> </li> <li>[ ] MVP 2.5<ul> <li>[ ] Drag and Drop mechanic</li> <li>[ ] Main menu</li> </ul> </li> <li>[ ] MVP 3 <ul> <li>[ ] Mechanic of winning the game</li> <li>[ ] Spell list in game</li> <li>[ ] 3 cards spells implementation</li> <li>[ ] Sound design</li> <li>[ ] Animations</li> </ul> </li> </ul>"},{"location":"#game-installation","title":"Game Installation","text":"<ol> <li>To download the archive of game click: Dowload the Game</li> <li>Unzip by any method, for example on windows, RMB to archive MVP2.zip, in list chose Extract all and chose place for it (don't matter)</li> <li>Open the directory MVP and double click LMB on CardGameMultiplayer, the game will be lauched</li> <li>Also in the directory you can find HOW_TO_LAUCH_GAME.md with similar instruction</li> </ol>"},{"location":"#usage-insructions-how-to-play","title":"Usage insructions - How to play","text":"<ol> <li>Click START button</li> <li>1 player must click Host Game, all other players should click Join Game</li> <li>If you are Host, share your ip with other players, for it go in cmd and write <code>ipconfig</code>, find field IPv4-adress and share this ip with other players</li> <li>If you are Joined player write the received IP address in the field IP and click Join</li> <li>When all players are connected, Host can click Proceed. to start the game</li> <li>From this point the game is actually started</li> <li>Players turns goes one after another, in your turn you can place the card LMB to card in your hand and A or D to place the card in left of right part if the spell respectively and click Pass to pass the turn</li> <li>When you have 2 cards in the spell, you can click Cast button to cast the spell with unique effect and then click Pass to pass the turn</li> <li>In this way game is playing, now there is no finish game mechanic, so for exit press Alt + F4 at keybord, this is all for now</li> </ol>"},{"location":"#documentation-link","title":"Documentation Link","text":""},{"location":"#all-information-about-development-in-this-contributing-file","title":"All information about development in This Contributing File","text":"<ul> <li>Link to Kandan board</li> <li>Git workflow</li> <li>Secrets management</li> </ul>"},{"location":"#quality-proof","title":"Quality proof","text":"<ul> <li>Quality characteristics and quality attribute scenarios</li> <li>Automated tests</li> <li>User acceptance tests</li> </ul>"},{"location":"#build-and-deployment-automation","title":"Build and deployment automation","text":"<ul> <li>Continuos Integration</li> <li>Continuos Deployment</li> </ul>"},{"location":"#architecture","title":"Architecture","text":"<ul> <li>Static view</li> <li>Dynamic view</li> <li>Deployment view</li> <li>Tech Stack</li> </ul>"},{"location":"#changelog","title":"Changelog","text":""},{"location":"#licence","title":"LICENCE","text":""},{"location":"CONTRIBUTING/","title":"CONTRIBUTING","text":""},{"location":"CONTRIBUTING/#kanban-board","title":"Kanban Board","text":"<p>We track our work at This Kanban board, actually it's a project at GitHub for our Backlog.</p>"},{"location":"CONTRIBUTING/#to-do","title":"To Do","text":"<p>In this column issues that were defined and formulated, but no one started work with them yet</p>"},{"location":"CONTRIBUTING/#the-entry-criteria","title":"The Entry Criteria","text":"<ul> <li>Defined the object of the issue</li> <li>Created list of subtasks</li> <li>The issue field \"Story Points\" was filled in</li> <li>The Acceptance criteria is defined</li> </ul>"},{"location":"CONTRIBUTING/#in-progress","title":"In Progress","text":"<p>In this column issues that already were assigned with someone and added in the sprint milestone</p>"},{"location":"CONTRIBUTING/#the-entry-criteria_1","title":"The Entry  Criteria","text":"<ul> <li>The issue description was revised to provide missing details</li> <li>The issue was added to the current sprint.</li> <li>The issue was assigned with team member</li> </ul>"},{"location":"CONTRIBUTING/#ready-to-deploy","title":"Ready To Deploy","text":"<p>In this column issues that actually done but not reviewed yet, so does not deployed yet</p>"},{"location":"CONTRIBUTING/#the-entry-criteria_2","title":"The Entry Criteria","text":"<ul> <li>All sub-tasks of the issue were completed</li> <li>The issue is ready to be reviewed</li> </ul>"},{"location":"CONTRIBUTING/#done","title":"Done","text":"<p>In this column issues that passed the Acceptance criteria and were deployed</p>"},{"location":"CONTRIBUTING/#the-entry-criteria_3","title":"The Entry Criteria","text":"<ul> <li>The acceptance criteria were approved</li> <li>All changes introduced to complete the issue were deployed to the production environment.</li> </ul>"},{"location":"CONTRIBUTING/#git-workflow-github-flow","title":"Git WorkFlow - GitHub flow","text":"<ol> <li>Firstly, we create a Milestone for the Sprint (week) at Sprint planning</li> <li>Create issues for tasks, formulate the sub-tasks</li> <li>Create Acceptance Criteria for each issue</li> <li>For each issue we define a suitable labels </li> <li>Each issue is assigned to team members, it's decided at Sprint Planning</li> <li>Add all tasks, that we difine at Sprint Planning, to the Milestone as a issues</li> <li>Create branches for each feature or issue, that named clear</li> <li>We have no specific commit messages format, but every message must have meaning</li> <li>When the issue is ready to deploy, Create a pull request using the  template</li> <li>Then the assigned reviewer checks the changes and approve them, Megre the PR</li> <li>If there any issues in merging, reviewer and one, who work in branch resolve them</li> </ol> <p>Git WorkFlow illustation using a Gitgraph diagram (Meramaid):  </p>"},{"location":"CONTRIBUTING/#secrets-managment","title":"Secrets Managment","text":"<p>We use the GITHUB_TOKEN for GitHub Actions and some custom secrets for work with unity, also for CI/CD Pipeline : UNITY_EMAIL , UNITY_LICENSE  and UNITY_PASSWORD. We store them in  GitHub  Repository \u2192 Settings \u2192 Secrets and variables \u2192 Actions. So no one has acces to them.</p>"},{"location":"Changelog/","title":"Changelog - Semanting Versioning","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"Changelog/#unreleased","title":"[Unreleased]","text":"<ul> <li>Main menu</li> <li>Settings menu</li> <li>Status effect visual</li> </ul>"},{"location":"Changelog/#250-2025-07-13","title":"[2.5.0] - 2025-07-13","text":"<p>MVP 2.5</p>"},{"location":"Changelog/#added","title":"Added","text":"<ul> <li>9 new 3-cards spells</li> <li>Drag-n-drop mechanic</li> <li>Letters code joining</li> </ul>"},{"location":"Changelog/#fixed","title":"Fixed","text":"<ul> <li>B+R \"reflect spell\" at the one who defends himself with it, and not at the one from whom the spell came.</li> <li>R+Y spell didn't work</li> </ul>"},{"location":"Changelog/#200-2025-07-05","title":"[2.0.0] - 2025-07-05","text":"<p>MVP 2</p>"},{"location":"Changelog/#added_1","title":"Added","text":"<ul> <li>3-6 players multiplayer</li> <li>Basic spell cast mechanic - only 2-cards spells</li> <li>Easeir way to connect</li> </ul>"},{"location":"Changelog/#fixed_1","title":"Fixed","text":"<ul> <li>The interface did not spawn on the client</li> </ul>"},{"location":"Changelog/#150-2025-07-4","title":"[1.5.0] - 2025-07-4","text":""},{"location":"Changelog/#added_2","title":"Added","text":"<ul> <li>Game logic</li> </ul>"},{"location":"Changelog/#100-2025-06-27","title":"[1.0.0] - 2025-06-27","text":"<p>MVP 1</p>"},{"location":"Changelog/#added_3","title":"Added","text":"<ul> <li>Ability to play for 2 players without game logic</li> <li>Simating of spell casting</li> <li>Visual design:<ol> <li>Cards</li> <li>Gamefield</li> </ol> </li> </ul>"},{"location":"Changelog/#000-2025-06-8","title":"[0.0.0] - 2025-06-8","text":"<p>MVP 1</p>"},{"location":"Changelog/#added_4","title":"Added","text":"<ul> <li>Offline gameplay skeleton:<ol> <li>User in-game interface</li> <li>Turn order</li> </ol> </li> </ul>"},{"location":"architecture/architecture/","title":"Architecture","text":""},{"location":"architecture/architecture/#static-view","title":"Static view","text":"<p> - Game manager contorls the process of the game - It works at Host device (the player who has chosen to be the host)  - Clients (the other players that the host has invited to the game) connect to the Host using a provider</p>"},{"location":"architecture/architecture/#coupling","title":"Coupling","text":"<p>\u0412escribes how tightly components are connected or dependent on one another. Lower coupling is usually better because changes in one component have less impact on others. </p> <ul> <li>Game Manager \u2194 Host Device <ul> <li>Strong but logical coupling, as the game manager only exists on the host.</li> </ul> </li> <li>Host Device \u2194 Provider <ul> <li>Moderate coupling \u2014 the provider handles connections, and could potentially be replaced with another implementation.</li> </ul> </li> <li>Provider \u2194 Client Device <ul> <li>Likely low coupling if connections are abstracted behind interfaces or messaging systems  Conclusion: The system exhibits moderate coupling, which is common case for peer-to-peer architecture. </li> </ul> </li> </ul>"},{"location":"architecture/architecture/#cohesion","title":"Cohesion","text":"<p>Refers to how well a component is focused on a single task or responsibility.  - Game Manager - Responsible only for managing the game logic and flow \u2014 high cohesion. - Host Device - Acts as the central point of control and handles player coordination \u2014 again, high cohesion. - Provider - Dedicated to establishing and managing connections between devices \u2014 clearly defined responsibility. - Client Device - Connects to the host and receives game state updates \u2014 well-contained functionality.  Conclusion: All components demonstrate high cohesion, meaning each one is focused on a specific role. This improves readability, maintainability, and makes debugging or refactoring easier.</p>"},{"location":"architecture/architecture/#affect-to-maintainability","title":"Affect to maintainability","text":"<ul> <li>Each component has a well-defined and isolated responsibility, making the system easier to understand, modify, and extend without introducing side effects.</li> <li>While some coupling (e.g., between the Game Manager and Host Device) is expected and necessary, the system avoids unnecessary interdependencies. This makes it feasible to refactor or replace parts of the system (such as the Provider) with minimal impact on other modules.</li> <li>The modular structure ensures that bugs can be traced more easily to specific areas, and enhancements (such as switching networking backends or adding features) can be implemented incrementally. Conclusion: The design encourages long-term maintainability, scalability, and clarity \u2014 all of which are critical for iterative development and future-proofing the product.</li> </ul>"},{"location":"architecture/architecture/#dynamic-view","title":"Dynamic view","text":"<p> This picture shows the game loop, Actors are players, they do actions, send them at Server (Host), which update the game state and send it to Players (Clients)</p>"},{"location":"architecture/architecture/#tests","title":"Tests","text":"<p>We test this scenario and server update the states and players see the changes in 0.86 seconds, we are happy with this result</p>"},{"location":"architecture/architecture/#deployment-view","title":"Deployment view","text":"<p>The system is deployed using a peer-to-peer architecture over a local network (Wi-Fi or LAN). One of the players acts as the Host, running the game logic (Game Manager), while others connect as Clients through a shared network. </p>"},{"location":"architecture/architecture/#legend","title":"Legend:","text":"<ul> <li>Boxes: Physical devices</li> <li>Arrows: Network connections (UDP/TCP over LAN)</li> <li>Host: The player who starts the game</li> <li>Clients: Other players who join the session</li> </ul>"},{"location":"architecture/architecture/#customer-side-deployment","title":"Customer-side deployment:","text":"<p>Players intall and start the game using guide from readme</p>"},{"location":"architecture/architecture/#tech-stack","title":"Tech Stack","text":""},{"location":"architecture/architecture/#game-development","title":"Game development","text":"<ul> <li>Unity</li> <li>Unity NetCode</li> <li>Unity Textmeshpro</li> </ul>"},{"location":"architecture/architecture/#visual-design","title":"Visual Design","text":"<ul> <li>Krita</li> <li>Canvas</li> <li>Figma</li> <li>Blender</li> </ul>"},{"location":"automation/continuous-delivery/","title":"CD pipeline","text":"<ul> <li>Link to the .yml file</li> <li>We use Unity-Builder for auto bilding our project</li> <li>The link for CI /CD workflow runs</li> </ul>"},{"location":"automation/continuous-integration/","title":"CI pipeline","text":"<ul> <li>Link to the .yml file</li> <li>We use only one static analysis tool - Linter (Super-Linter) for check our code for style</li> <li>Also we use unity-test-runner for run auto-tests</li> <li>The link for CI /CD workflow runs</li> </ul>"},{"location":"quality-assurance/automated-tests/","title":"Automated Tests","text":"<ul> <li>For tests we use the Unity Test Framework</li> <li>We implemented Editor Mode (Unit) Tests and Play Mode (integration) tests</li> <li>Link to the Unit tests</li> <li>Link to the Integration tests</li> </ul>"},{"location":"quality-assurance/user-acceptance-tests/","title":"User Acceptance Tests","text":"<p>These are tests in the format of acceptance criteria:</p> <ol> <li> <p>Local game</p> </li> <li> <p>GIVEN Join and host buttons  </p> </li> <li>WHEN Player tries to join one lobby using host and join buttons  </li> <li> <p>THEN They come to one game-room</p> </li> <li> <p>Moving cards</p> </li> <li> <p>GIVEN Cards in hand  </p> </li> <li>WHEN Player chooses a card and a position for it in the spell-preparing area  </li> <li> <p>THEN Card moves to the spell-preparing area</p> </li> <li> <p>Demo version of casting spells</p> </li> <li> <p>GIVEN Cards on the table and cast button  </p> </li> <li>WHEN Player places 2 or 3 cards and presses the cast button  </li> <li>THEN Effect is performed and cards are removed from the table</li> </ol>"},{"location":"quality-attributes/quality-attribute-scenarios/","title":"Quality Attribute Scenarios","text":"<ul> <li>Faultlessness - Degree to which a system, product or component performs specified functions without fault under normal operation. In game user should not meet the bugs.</li> <li>Adaptability - Degree to which a product or system can effectively and efficiently be adapted for or transferred to different hardware, software or other operational or usage environments.</li> <li>Capacity - Degree to which the maximum limits of a product or system parameter meet requirements</li> </ul> Attribute Faultlessness Source Players Stimulus All players join Artifact Game sytem Enviroment Normal system enviroment Response All players connected succesfully Response measure All players can see actions of other players Attribute Adaptability Source Linux OS Stimulus Players launched game from different OS (Windows and Linux) Artifact Cross-platform work Enviroment game env during player connections from different OS Response Players from different  Os's can play together Response measure Players from different Os's can play in the same way if they play from the same OS Attribute Capacity Source Players Stimulus 6 (maximum amount) players join  the game Artifact Game system Enviroment Game system during 6 players game Response Game work well, without freezing Response measure System works correctly without any problems"}]}